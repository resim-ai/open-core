import numpy
import resim.transforms.python.so3_python
from typing import ClassVar, overload

class SE3:
    DIMS: ClassVar[int] = ...  # read-only
    DOF: ClassVar[int] = ...  # read-only
    @overload
    def __init__(self) -> None: ...
    @overload
    def __init__(self, rotation: resim.transforms.python.so3_python.SO3) -> None: ...
    @overload
    def __init__(self, translation: numpy.ndarray[numpy.float64[3, 1]]) -> None: ...
    @overload
    def __init__(self, rotation: resim.transforms.python.so3_python.SO3, translation: numpy.ndarray[numpy.float64[3, 1]]) -> None: ...
    def arc_length(self) -> float: ...
    def exp(self) -> SE3: ...
    def identity(self) -> SE3: ...
    def interp(self, fraction: float) -> SE3: ...
    def inverse(self) -> SE3: ...
    def is_approx(self, other: SE3, precision: float = ...) -> bool: ...
    def log(self) -> numpy.ndarray[numpy.float64[6, 1]]: ...
    def rotate(self, source_vector: numpy.ndarray[numpy.float64[3, 1]]) -> numpy.ndarray[numpy.float64[3, 1]]: ...
    def rotation(self) -> resim.transforms.python.so3_python.SO3: ...
    def translation(self) -> numpy.ndarray[numpy.float64[3, 1]]: ...
    @overload
    def __mul__(self, arg0: SE3) -> SE3: ...
    @overload
    def __mul__(self, arg0: numpy.ndarray[numpy.float64[3, 1]]) -> numpy.ndarray[numpy.float64[3, 1]]: ...
