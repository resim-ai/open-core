module(
    name = "resim_open_core",
    version = "0.6.2",
)

bazel_dep(name = "aspect_bazel_lib", version = "2.7.8")
bazel_dep(name = "aspect_rules_py", version = "0.7.3")
bazel_dep(name = "au", version = "0.3.4")
bazel_dep(name = "bazel_skylib", version = "1.6.1")
bazel_dep(name = "com_github_mvukov_rules_ros2", version = "0.0.0-20250612-f0d04fe")
git_override(
    module_name = "com_github_mvukov_rules_ros2",
    commit = "6130e8f61c1343fab7809e933c9faf47ab1e9fd4",
    patch_strip = 1,
    patches = [
        "//resim/third_party/ros2:testonly.patch",
        "//resim/third_party/ros2:rmw_implementation_patch.patch",
    ],
    remote = "https://github.com/mvukov/rules_ros2.git",
)

bazel_dep(name = "cpr", version = "1.10.5")
bazel_dep(name = "cxxopts", version = "3.0.0")
bazel_dep(name = "eigen", version = "3.4.0.bcr.1.1", repo_name = "libeigen")
bazel_dep(name = "fmt", version = "11.1.4")
bazel_dep(name = "foxglove_schemas", version = "0.7.1")
bazel_dep(name = "glog", version = "0.7.0", repo_name = "com_github_google_glog")
bazel_dep(name = "googletest", version = "1.14.0", repo_name = "com_google_googletest")
bazel_dep(name = "hedron_compile_commands", version = "a14ad3a64e7bf398ab48105aaa0348e032ac87f8")
bazel_dep(name = "httplib", version = "0.15.3")
bazel_dep(name = "indicators", version = "2.3.0")
bazel_dep(name = "libuuid", version = "2.39.3.bcr.1")
bazel_dep(name = "mcap", version = "1.2.1")
bazel_dep(name = "nlohmann_json", version = "3.11.3")
bazel_dep(name = "platforms", version = "0.0.10")
bazel_dep(name = "protobuf", version = "26.0", repo_name = "com_google_protobuf")
bazel_dep(name = "pybind11_bazel", version = "2.12.0")
bazel_dep(name = "rules_cc", version = "0.0.9")
bazel_dep(name = "rules_go", version = "0.49.0")
bazel_dep(name = "rules_oci", version = "1.7.6")
bazel_dep(name = "rules_pkg", version = "0.10.1")
bazel_dep(name = "rules_proto", version = "6.0.0")
bazel_dep(name = "rules_python", version = "0.35.0")
bazel_dep(name = "vision_msgs", version = "4.1.0.1")
bazel_dep(name = "rules_foreign_cc", version = "0.12.0")

rules_ros2_non_module_deps = use_extension("@com_github_mvukov_rules_ros2//ros2:extensions.bzl", "non_module_deps")
use_repo(
    rules_ros2_non_module_deps,
    "ros2_common_interfaces",
    "ros2_geometry2",
    "ros2_rcl_interfaces",
    "ros2_rclcpp",
    "ros2_rclpy",
    "ros2_rcpputils",
    "ros2_rmw_cyclonedds",
    "ros2_rosbag2",
    "ros2_rosidl",
)

_PYTHON_VERSIONS = [
    "3.10",
    "3.11",
]

python = use_extension("@rules_python//python/extensions:python.bzl", "python")

[
    python.toolchain(
        configure_coverage_tool = True,
        ignore_root_user_error = True,
        python_version = python_version,
    )
    for python_version in _PYTHON_VERSIONS
]

pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip")

[
    pip.parse(
        hub_name = "resim_python_deps",
        python_version = python_version,
        requirements_lock = "@resim_open_core//:requirements_lock.txt",
    )
    for python_version in _PYTHON_VERSIONS
]

use_repo(pip, "resim_python_deps")

[
    pip.parse(
        hub_name = "resim_pkg_deps",
        python_version = python_version,
        requirements_lock = "@resim_open_core//pkg:requirements_lock.txt",
    )
    for python_version in _PYTHON_VERSIONS
]

use_repo(pip, "resim_pkg_deps")

[
    pip.parse(
        hub_name = "resim_python_client_deps",
        python_version = python_version,
        requirements_lock = "@resim_open_core//resim-python-client:requirements_lock.txt",
    )
    for python_version in _PYTHON_VERSIONS
]

use_repo(pip, "resim_python_client_deps")

[
    pip.parse(
        hub_name = "resim_python_client_dev_deps",
        python_version = python_version,
        requirements_lock = "@resim_open_core//resim-python-client:requirements-dev_lock.txt",
    )
    for python_version in _PYTHON_VERSIONS
]

use_repo(pip, "resim_python_client_dev_deps")

register_toolchains(
    "@resim_open_core//resim/toolchain:cc_toolchain_for_k8",
    "@resim_open_core//resim/toolchain:aarch64_cross_toolchain_for_amd64",
    "@resim_open_core//resim/toolchain:cc_toolchain_for_aarch64",
)

resim_version_extension = use_extension("@resim_open_core//:version.bzl", "resim_version_extension")
use_repo(resim_version_extension, "resim_version")

oci = use_extension("@rules_oci//oci:extensions.bzl", "oci")
oci.pull(
    name = "debian_slim",
    image = "debian",
    platforms = [
        "linux/amd64",
        "linux/arm64/v8",
    ],
    tag = "bookworm-slim",
)
oci.pull(
    name = "python_image",
    image = "python",
    platforms = [
        "linux/amd64",
        "linux/arm64/v8",
    ],
    tag = "3.11-slim",
)
oci.pull(
    name = "alpine",
    image = "alpine",
    platforms = [
        "linux/amd64",
        "linux/arm64/v8",
    ],
    tag = "latest",
)
use_repo(oci, "debian_slim")
use_repo(oci, "python_image")
use_repo(oci, "alpine")
