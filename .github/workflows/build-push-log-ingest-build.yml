name: Log Ingest Build
on:
  push:
    branches:
    - main

permissions:
  id-token: write
  contents: read

env:
  REPO_NAME: open-builds/log-ingest
  REGISTRY_NAME: public.ecr.aws/resim

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.ECR_RW_ROLE }}
          aws-region: us-east-1

      - name: Log in to ECR Public
        uses: docker/login-action@v2
        with:
          registry: public.ecr.aws

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY_NAME }}/${{ env.REPO_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha

      - name: Setup Bazel Cache Auth
        uses: ./.github/actions/setup-bazel-cache-auth
        with:
          bazel_cache_auth_string: ${{ secrets.BAZEL_CACHE_AUTH_STRING }}

      - name: Build
        env:
          REPO_NAME: ${{ env.REGISTRY_NAME }}/${{ env.REPO_NAME }}
          IMAGE_VERSION: ${{ steps.meta.outputs.version }}
          SHA: ${{ github.sha }}
        run: bazel build //resim/builds/log-ingest:log_ingest_build

      - name: Push
        if: ${{ github.ref == 'refs/heads/main' }}
        env:
          REPO_NAME: ${{ env.REGISTRY_NAME }}/${{ env.REPO_NAME }}
          IMAGE_VERSION: ${{ steps.meta.outputs.version }}
          SHA: ${{ github.sha }}
        run: bazel run //resim/builds/log-ingest:log_ingest_build_push -- --repository "$REPO_NAME" --tag "$IMAGE_VERSION" --tag "sha-${SHA}"  --tag "latest"
