name: Draft Release
on:
  workflow_dispatch:
    inputs:
      tag:
        type: string
        description: "Release Tag"
jobs:
  draft-release:
    name: Draft Release
    runs-on: ubuntu-20.04
    container:
      image: public.ecr.aws/resim/core:latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Workaround for Custom Docker Image
        # Trunk makes use of git and we will get permissions issues (i.e.
        # detected dubious ownership) if we don't make the repo a safe
        # directory.
        run: git config --global --add safe.directory /__w/open-core/open-core

      - name: Check tag availability
        if: "${{ github.event.inputs.tag != '' }}"
        env:
          RESIM_VERSION: ${{ github.event.inputs.tag }}
        run: ./.github/workflows/check_tags_available.sh

      - name: Cache Bazel
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/bazel
          key: ${{ runner.os }}-bazel-${{ hashFiles('.bazelversion', '.bazelrc', 'WORKSPACE') }}
          restore-keys: |
            ${{ runner.os }}-bazel-

      - name: Build `compile_commands.json` database
        run: bazel run @hedron_compile_commands//:refresh_all


      - name: Generate Coverage Report
        run: bazel coverage ... --combined_report=lcov --java_runtime_version=remotejdk_11 --nocache_test_results --test_tag_filters="-integration"

      - uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Trunk Check
        uses: trunk-io/trunk-action@v1
        #with:
        #  arguments: --filter=-mypy

      - name: Build Go Bindings
        if: "${{ github.event.inputs.tag != '' }}"
        env:
          RESIM_VERSION: ${{ github.event.inputs.tag }}
        run: |
          git config --global user.name 'Michael Bauer'
          git config --global user.email 'michael@resim.ai'
          ./.github/workflows/add_go_bindings.sh

      - name: Clean Old Artifacts
        run: rm -rf ./bazel-bin/pkg/*

      - name: Build Metrics Tools
        run: bazel build //resim/metrics:resim_metrics_tools

      - name: Build Wheels
        env:
          RESIM_VERSION: ${{ github.event.inputs.tag }}
        run: bazel build //pkg/... --repo_env="RESIM_VERSION=$RESIM_VERSION"

      - name: Draft Release
        if: "${{ github.event.inputs.tag != '' }}"
        uses: ncipollo/release-action@v1
        with:
          artifacts: "bazel-bin/resim/metrics/resim_metrics_tools.tar.gz,bazel-bin/pkg/*.whl"
          generateReleaseNotes: true
          tag: ${{ github.event.inputs.tag }}
